{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/src/App.js\";\n// /client/App.js\nimport React, { Component } from \"react\";\nimport Dropzone from 'react-dropzone';\nimport Firebase, { auth, provider } from './config';\nimport axios from \"axios\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  // initialize our state \n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n\n    _this.onFileDrop = function (files) {\n      _this.setState({\n        file: files\n      });\n\n      var fileType = files[0].name.slice(files[0].name.lastIndexOf(\".\"));\n      var score = 0;\n\n      if (fileType === \".cpp\") {//Run C++ autograder, get score in score\n      } else if (fileType === \".java\") {//Run Java autograder, get score in score\n      }\n\n      var key = _this.state.user.email.slice(0, _this.state.user.email.indexOf(\"@\"));\n\n      var today = new Date();\n      var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \".\" + today.getMilliseconds();\n      var submitRef = Firebase.database().ref('submits');\n      var submission = {\n        user: key,\n        time: time,\n        score: score\n      };\n      var submitID = \"\";\n\n      for (var teamSubmit in _this.state.submits) {\n        if (_this.state.submits[teamSubmit].user === key) {\n          submitID = _this.state.submits[teamSubmit].id;\n          break;\n        }\n      }\n\n      if (submitID === \"\") {\n        submitRef.push(submission);\n      } else {\n        var submits = _this.state.submits;\n        var index = submits.findIndex(function (data) {\n          return data.id === submitID;\n        });\n\n        if (_this.state.submits[index].score < score) {\n          Firebase.database().ref('submits/' + submitID).update({\n            score: score,\n            time: time\n          });\n        }\n      }\n    };\n\n    _this.getDataFromDb = function () {\n      fetch(\"http://localhost:3001/api/getData\").then(function (data) {\n        return data.json();\n      }).then(function (res) {\n        return _this.setState({\n          data: res.data\n        });\n      });\n    };\n\n    _this.putDataToDB = function (message) {\n      var currentIds = _this.state.data.map(function (data) {\n        return data.id;\n      });\n\n      var idToBeAdded = 0;\n\n      while (currentIds.includes(idToBeAdded)) {\n        ++idToBeAdded;\n      }\n\n      axios.post(\"http://localhost:3001/api/putData\", {\n        id: idToBeAdded,\n        message: message\n      });\n    };\n\n    _this.deleteFromDB = function (idTodelete) {\n      var objIdToDelete = null;\n\n      _this.state.data.forEach(function (dat) {\n        if (dat.id === idTodelete) {\n          objIdToDelete = dat._id;\n        }\n      });\n\n      axios.delete(\"http://localhost:3001/api/deleteData\", {\n        data: {\n          id: objIdToDelete\n        }\n      });\n    };\n\n    _this.updateDB = function (idToUpdate, updateToApply) {\n      var objIdToUpdate = null;\n\n      _this.state.data.forEach(function (dat) {\n        if (dat.id === idToUpdate) {\n          objIdToUpdate = dat._id;\n        }\n      });\n\n      axios.post(\"http://localhost:3001/api/updateData\", {\n        id: objIdToUpdate,\n        update: {\n          message: updateToApply\n        }\n      });\n    };\n\n    _this.state = {\n      user: null,\n      file: [],\n      submits: []\n    };\n    _this.login = _this.login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.logout = _this.logout.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFileDrop = _this.onFileDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var submitRef = Firebase.database().ref('submits');\n      submitRef.on('value', function (snapshot) {\n        var submits = snapshot.val();\n        var newState = [];\n\n        for (var submission in submits) {\n          newState.push({\n            id: submission,\n            user: submits[submission].user,\n            score: submits[submission].score,\n            time: submits[submission].time\n          });\n        }\n\n        _this2.setState({\n          submits: newState\n        });\n      });\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this3 = this;\n\n      auth.signOut().then(function () {\n        _this3.setState({\n          user: null\n        });\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      var _this4 = this;\n\n      auth.signInWithPopup(provider).then(function (result) {\n        var user = result.user;\n\n        _this4.setState({\n          user: user\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"And Then There Were NULL\"))), this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Welcome \", this.state.user.displayName, \"!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"When you are done, click the button below to log out.\"), React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Log Out\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        accept: \".cpp,.java\",\n        onDropAccepted: this.onFileDrop,\n        multiple: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"Drag and drop your program file here, or click this text to select a file\"))));\n      }))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Welcome to the 2019 ArborHacks coding competition!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Please click the button below to log in with your Google account.\"), React.createElement(\"button\", {\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Log In\")));\n    } // when component mounts, first thing it does is fetch all existing data in our db\n    // then we incorporate a polling logic so that we can easily see if our db has \n    // changed and implement those changes into our UI\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getDataFromDb();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getDataFromDb, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    } // never let a process live forever \n    // always kill a process everytime we are done using it\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    } // just a note, here, in the front end, we use the id key of our data object \n    // in order to identify which we want to Update or delete.\n    // for our back end, we use the object id assigned by MongoDB to modify \n    // data base entries\n    // our first get method that uses our backend api to \n    // fetch data from our data base\n\n  }, {\n    key: \"render\",\n    // here is our UI\n    // it is easy to understand their functions when you \n    // see them render into our screen\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"And Then There Were NULL\"))), this.state.user ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Welcome \", this.state.user.displayName, \"!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"When you are done, click the button below to log out.\"), React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Log Out\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Dropzone, {\n        accept: \".cpp,.java\",\n        onDropAccepted: this.onFileDrop,\n        multiple: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, function (_ref2) {\n        var getRootProps = _ref2.getRootProps,\n            getInputProps = _ref2.getInputProps;\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(\"div\", Object.assign({}, getRootProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, \"Drag and drop your program file here, or click this text to select a file\"))));\n      }))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Welcome to the 2019 ArborHacks coding competition!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Please click the button below to log in with your Google account.\"), React.createElement(\"button\", {\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Log In\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/wan/Documents/Projects/General/fullstack_app/client/src/App.js"],"names":["React","Component","Dropzone","Firebase","auth","provider","axios","App","props","state","data","id","message","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","onFileDrop","files","setState","file","fileType","name","slice","lastIndexOf","score","key","user","email","indexOf","today","Date","time","getHours","getMinutes","getSeconds","getMilliseconds","submitRef","database","ref","submission","submitID","teamSubmit","submits","push","index","findIndex","update","getDataFromDb","fetch","then","json","res","putDataToDB","currentIds","map","idToBeAdded","includes","post","deleteFromDB","idTodelete","objIdToDelete","forEach","dat","_id","delete","updateDB","updateToApply","objIdToUpdate","login","bind","logout","on","snapshot","val","newState","signOut","signInWithPopup","result","displayName","getRootProps","getInputProps","interval","setInterval","clearInterval"],"mappings":";;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,IAAkBC,IAAlB,EAAwBC,QAAxB,QAAuC,UAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,G;;;;;AACJ;AAWA,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,6EAAMA,KAAN;AADmB,UAVnBC,KAUmB,GAVX;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,aAAa,EAAE,KAJT;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,UAAU,EAAE,IANN;AAONC,MAAAA,cAAc,EAAE;AAPV,KAUW;;AAAA,UAkDpBC,UAlDoB,GAkDP,UAACC,KAAD,EAAW;AACvB,YAAKC,QAAL,CAAc;AAACC,QAAAA,IAAI,EAAEF;AAAP,OAAd;;AACA,UAAIG,QAAQ,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASI,IAAT,CAAcC,KAAd,CAAoBL,KAAK,CAAC,CAAD,CAAL,CAASI,IAAT,CAAcE,WAAd,CAA0B,GAA1B,CAApB,CAAf;AACA,UAAIC,KAAK,GAAG,CAAZ;;AACA,UAAGJ,QAAQ,KAAK,MAAhB,EAAwB,CACvB;AACA,OAFD,MAGK,IAAGA,QAAQ,KAAK,OAAhB,EAAyB,CAC7B;AACA;;AACD,UAAIK,GAAG,GAAG,MAAKjB,KAAL,CAAWkB,IAAX,CAAgBC,KAAhB,CAAsBL,KAAtB,CAA4B,CAA5B,EAA+B,MAAKd,KAAL,CAAWkB,IAAX,CAAgBC,KAAhB,CAAsBC,OAAtB,CAA8B,GAA9B,CAA/B,CAAV;;AACA,UAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAIC,IAAI,GAAGF,KAAK,CAACG,QAAN,KAAmB,GAAnB,GAAyBH,KAAK,CAACI,UAAN,EAAzB,GAA8C,GAA9C,GAAoDJ,KAAK,CAACK,UAAN,EAApD,GAAyE,GAAzE,GAA+EL,KAAK,CAACM,eAAN,EAA1F;AACA,UAAMC,SAAS,GAAGlC,QAAQ,CAACmC,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,CAAlB;AACA,UAAMC,UAAU,GAAG;AAClBb,QAAAA,IAAI,EAAED,GADY;AAElBM,QAAAA,IAAI,EAAEA,IAFY;AAGlBP,QAAAA,KAAK,EAAEA;AAHW,OAAnB;AAKA,UAAIgB,QAAQ,GAAG,EAAf;;AACA,WAAI,IAAIC,UAAR,IAAsB,MAAKjC,KAAL,CAAWkC,OAAjC,EAA0C;AACzC,YAAG,MAAKlC,KAAL,CAAWkC,OAAX,CAAmBD,UAAnB,EAA+Bf,IAA/B,KAAwCD,GAA3C,EAAgD;AAC/Ce,UAAAA,QAAQ,GAAG,MAAKhC,KAAL,CAAWkC,OAAX,CAAmBD,UAAnB,EAA+B/B,EAA1C;AACA;AACA;AACD;;AACD,UAAG8B,QAAQ,KAAK,EAAhB,EAAoB;AACnBJ,QAAAA,SAAS,CAACO,IAAV,CAAeJ,UAAf;AACA,OAFD,MAGK;AACJ,YAAIG,OAAO,GAAG,MAAKlC,KAAL,CAAWkC,OAAzB;AACA,YAAME,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkB,UAAApC,IAAI,EAAI;AACvC,iBAAOA,IAAI,CAACC,EAAL,KAAY8B,QAAnB;AACA,SAFa,CAAd;;AAGA,YAAG,MAAKhC,KAAL,CAAWkC,OAAX,CAAmBE,KAAnB,EAA0BpB,KAA1B,GAAkCA,KAArC,EAA4C;AAC3CtB,UAAAA,QAAQ,CAACmC,QAAT,GAAoBC,GAApB,CAAwB,aAAaE,QAArC,EAA+CM,MAA/C,CAAsD;AACrDtB,YAAAA,KAAK,EAAEA,KAD8C;AAErDO,YAAAA,IAAI,EAAEA;AAF+C,WAAtD;AAIA;AACD;AACD,KA3FmB;;AAAA,UAkKnBgB,aAlKmB,GAkKH,YAAM;AACpBC,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACQ,UAAAxC,IAAI;AAAA,eAAIA,IAAI,CAACyC,IAAL,EAAJ;AAAA,OADZ,EAEGD,IAFH,CAEQ,UAAAE,GAAG;AAAA,eAAI,MAAKjC,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAE0C,GAAG,CAAC1C;AAAZ,SAAd,CAAJ;AAAA,OAFX;AAGD,KAtKkB;;AAAA,UA0KnB2C,WA1KmB,GA0KL,UAAAzC,OAAO,EAAI;AACvB,UAAI0C,UAAU,GAAG,MAAK7C,KAAL,CAAWC,IAAX,CAAgB6C,GAAhB,CAAoB,UAAA7C,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAT;AAAA,OAAxB,CAAjB;;AACA,UAAI6C,WAAW,GAAG,CAAlB;;AACA,aAAOF,UAAU,CAACG,QAAX,CAAoBD,WAApB,CAAP,EAAyC;AACvC,UAAEA,WAAF;AACD;;AAEDlD,MAAAA,KAAK,CAACoD,IAAN,CAAW,mCAAX,EAAgD;AAC9C/C,QAAAA,EAAE,EAAE6C,WAD0C;AAE9C5C,QAAAA,OAAO,EAAEA;AAFqC,OAAhD;AAID,KArLkB;;AAAA,UA0LnB+C,YA1LmB,GA0LJ,UAAAC,UAAU,EAAI;AAC3B,UAAIC,aAAa,GAAG,IAApB;;AACA,YAAKpD,KAAL,CAAWC,IAAX,CAAgBoD,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,YAAIA,GAAG,CAACpD,EAAJ,KAAWiD,UAAf,EAA2B;AACzBC,UAAAA,aAAa,GAAGE,GAAG,CAACC,GAApB;AACD;AACF,OAJD;;AAMA1D,MAAAA,KAAK,CAAC2D,MAAN,CAAa,sCAAb,EAAqD;AACnDvD,QAAAA,IAAI,EAAE;AACJC,UAAAA,EAAE,EAAEkD;AADA;AAD6C,OAArD;AAKD,KAvMkB;;AAAA,UA4MnBK,QA5MmB,GA4MR,UAACnD,UAAD,EAAaoD,aAAb,EAA+B;AACxC,UAAIC,aAAa,GAAG,IAApB;;AACA,YAAK3D,KAAL,CAAWC,IAAX,CAAgBoD,OAAhB,CAAwB,UAAAC,GAAG,EAAI;AAC7B,YAAIA,GAAG,CAACpD,EAAJ,KAAWI,UAAf,EAA2B;AACzBqD,UAAAA,aAAa,GAAGL,GAAG,CAACC,GAApB;AACD;AACF,OAJD;;AAMA1D,MAAAA,KAAK,CAACoD,IAAN,CAAW,sCAAX,EAAmD;AACjD/C,QAAAA,EAAE,EAAEyD,aAD6C;AAEjDrB,QAAAA,MAAM,EAAE;AAAEnC,UAAAA,OAAO,EAAEuD;AAAX;AAFyC,OAAnD;AAID,KAxNkB;;AAGnB,UAAK1D,KAAL,GAAa;AACZkB,MAAAA,IAAI,EAAE,IADM;AAEZP,MAAAA,IAAI,EAAE,EAFM;AAGZuB,MAAAA,OAAO,EAAE;AAHG,KAAb;AAMA,UAAK0B,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,uDAAb;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYD,IAAZ,uDAAd;AACA,UAAKrD,UAAL,GAAkB,MAAKA,UAAL,CAAgBqD,IAAhB,uDAAlB;AAXmB;AAYnB;;;;wCAEmB;AAAA;;AACnB,UAAMjC,SAAS,GAAGlC,QAAQ,CAACmC,QAAT,GAAoBC,GAApB,CAAwB,SAAxB,CAAlB;AACAF,MAAAA,SAAS,CAACmC,EAAV,CAAa,OAAb,EAAsB,UAACC,QAAD,EAAc;AACnC,YAAI9B,OAAO,GAAG8B,QAAQ,CAACC,GAAT,EAAd;AACA,YAAIC,QAAQ,GAAG,EAAf;;AACA,aAAI,IAAInC,UAAR,IAAsBG,OAAtB,EAA+B;AAC9BgC,UAAAA,QAAQ,CAAC/B,IAAT,CAAc;AACbjC,YAAAA,EAAE,EAAE6B,UADS;AAEbb,YAAAA,IAAI,EAAEgB,OAAO,CAACH,UAAD,CAAP,CAAoBb,IAFb;AAGbF,YAAAA,KAAK,EAAEkB,OAAO,CAACH,UAAD,CAAP,CAAoBf,KAHd;AAIbO,YAAAA,IAAI,EAAEW,OAAO,CAACH,UAAD,CAAP,CAAoBR;AAJb,WAAd;AAMA;;AACD,QAAA,MAAI,CAACb,QAAL,CAAc;AACbwB,UAAAA,OAAO,EAAEgC;AADI,SAAd;AAGA,OAdD;AAeA;;;6BAEQ;AAAA;;AACRvE,MAAAA,IAAI,CAACwE,OAAL,GACE1B,IADF,CACO,YAAM;AACX,QAAA,MAAI,CAAC/B,QAAL,CAAc;AACbQ,UAAAA,IAAI,EAAE;AADO,SAAd;AAGA,OALF;AAMA;;;4BAEO;AAAA;;AACPvB,MAAAA,IAAI,CAACyE,eAAL,CAAqBxE,QAArB,EACE6C,IADF,CACO,UAAC4B,MAAD,EAAY;AACjB,YAAMnD,IAAI,GAAGmD,MAAM,CAACnD,IAApB;;AACA,QAAA,MAAI,CAACR,QAAL,CAAc;AAACQ,UAAAA,IAAI,EAAJA;AAAD,SAAd;AACA,OAJF;AAKA;;;6BA6CQ;AACR,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,CADD,CADD,EAME,KAAKlB,KAAL,CAAWkB,IAAX,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAY,KAAKlB,KAAL,CAAWkB,IAAX,CAAgBoD,WAA5B,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFD,EAGC;AAAQ,QAAA,OAAO,EAAE,KAAKR,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHD,CADD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AACC,QAAA,MAAM,EAAC,YADR;AAEC,QAAA,cAAc,EAAE,KAAKtD,UAFtB;AAGC,QAAA,QAAQ,EAAE,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA,YAAE+D,YAAF,QAAEA,YAAF;AAAA,YAAgBC,aAAhB,QAAgBA,aAAhB;AAAA,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACC,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAAH,CAFD,CADD,CADA;AAAA,OALF,CADD,CAND,CADA,GAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADC,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAFC,EAGD;AAAQ,QAAA,OAAO,EAAE,KAAKZ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHC,CA9BJ,CADD;AAuCA,K,CAEA;AACA;AACA;;;;wCACoB;AAClB,WAAKrB,aAAL;;AACA,UAAI,CAAC,KAAKvC,KAAL,CAAWI,aAAhB,EAA+B;AAC7B,YAAIqE,QAAQ,GAAGC,WAAW,CAAC,KAAKnC,aAAN,EAAqB,IAArB,CAA1B;AACA,aAAK7B,QAAL,CAAc;AAAEN,UAAAA,aAAa,EAAEqE;AAAjB,SAAd;AACD;AACF,K,CAED;AACA;;;;2CACuB;AACrB,UAAI,KAAKzE,KAAL,CAAWI,aAAf,EAA8B;AAC5BuE,QAAAA,aAAa,CAAC,KAAK3E,KAAL,CAAWI,aAAZ,CAAb;AACA,aAAKM,QAAL,CAAc;AAAEN,UAAAA,aAAa,EAAE;AAAjB,SAAd;AACD;AACF,K,CAED;AACA;AACA;AACA;AAEA;AACA;;;;AA0DA;AACA;AACA;6BACS;AACV,aACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADD,CADD,CADD,EAME,KAAKJ,KAAL,CAAWkB,IAAX,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAY,KAAKlB,KAAL,CAAWkB,IAAX,CAAgBoD,WAA5B,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFD,EAGC;AAAQ,QAAA,OAAO,EAAE,KAAKR,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHD,CADD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,QAAD;AACC,QAAA,MAAM,EAAC,YADR;AAEC,QAAA,cAAc,EAAE,KAAKtD,UAFtB;AAGC,QAAA,QAAQ,EAAE,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA,YAAE+D,YAAF,SAAEA,YAAF;AAAA,YAAgBC,aAAhB,SAAgBA,aAAhB;AAAA,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,6CAASD,YAAY,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACC,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAAH,CAFD,CADD,CADA;AAAA,OALF,CADD,CAND,CADA,GAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADC,EAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAFC,EAGD;AAAQ,QAAA,OAAO,EAAE,KAAKZ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHC,CA9BJ,CADD;AAuCA;;;;EAlRiBpE,S;;AAqRlB,eAAeM,GAAf","sourcesContent":["// /client/App.js\nimport React, { Component } from \"react\";\nimport Dropzone from 'react-dropzone';\nimport Firebase, {auth, provider} from './config';\nimport axios from \"axios\";\n\nclass App extends Component {\n  // initialize our state \n  state = {\n    data: [],\n    id: 0,\n    message: null,\n    intervalIsSet: false,\n    idToDelete: null,\n    idToUpdate: null,\n    objectToUpdate: null\n  };\n\n  constructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tuser: null,\n\t\t\tfile: [],\n\t\t\tsubmits: []\n\t\t}\n\t\t\n\t\tthis.login = this.login.bind(this);\n\t\tthis.logout = this.logout.bind(this);\n\t\tthis.onFileDrop = this.onFileDrop.bind(this);\n\t}\n\t\n\tcomponentDidMount() {\n\t\tconst submitRef = Firebase.database().ref('submits');\n\t\tsubmitRef.on('value', (snapshot) => {\n\t\t\tlet submits = snapshot.val();\n\t\t\tlet newState = [];\n\t\t\tfor(let submission in submits) {\n\t\t\t\tnewState.push({\n\t\t\t\t\tid: submission,\n\t\t\t\t\tuser: submits[submission].user,\n\t\t\t\t\tscore: submits[submission].score,\n\t\t\t\t\ttime: submits[submission].time\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tsubmits: newState\n\t\t\t});\n\t\t});\n\t}\n\t\n\tlogout() {\n\t\tauth.signOut()\n\t\t\t.then(() => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tuser: null\n\t\t\t\t});\n\t\t\t});\n\t}\n\t\n\tlogin() {\n\t\tauth.signInWithPopup(provider)\n\t\t\t.then((result) => {\n\t\t\t\tconst user = result.user;\n\t\t\t\tthis.setState({user});\n\t\t\t});\n\t}\n\t\n\tonFileDrop = (files) => {\n\t\tthis.setState({file: files})\n\t\tvar fileType = files[0].name.slice(files[0].name.lastIndexOf(\".\"));\n\t\tlet score = 0;\n\t\tif(fileType === \".cpp\") {\n\t\t\t//Run C++ autograder, get score in score\n\t\t}\n\t\telse if(fileType === \".java\") {\n\t\t\t//Run Java autograder, get score in score\n\t\t}\n\t\tvar key = this.state.user.email.slice(0, this.state.user.email.indexOf(\"@\"));\n\t\tvar today = new Date();\n\t\tvar time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \".\" + today.getMilliseconds();\n\t\tconst submitRef = Firebase.database().ref('submits');\n\t\tconst submission = {\n\t\t\tuser: key,\n\t\t\ttime: time,\n\t\t\tscore: score\n\t\t}\n\t\tlet submitID = \"\";\n\t\tfor(let teamSubmit in this.state.submits) {\n\t\t\tif(this.state.submits[teamSubmit].user === key) {\n\t\t\t\tsubmitID = this.state.submits[teamSubmit].id;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(submitID === \"\") {\n\t\t\tsubmitRef.push(submission);\n\t\t}\n\t\telse {\n\t\t\tlet submits = this.state.submits;\n\t\t\tconst index = submits.findIndex(data => {\n\t\t\t\treturn data.id === submitID\n\t\t\t});\n\t\t\tif(this.state.submits[index].score < score) {\n\t\t\t\tFirebase.database().ref('submits/' + submitID).update({\n\t\t\t\t\tscore: score,\n\t\t\t\t\ttime: time\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t<header>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>And Then There Were NULL</h1>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t{this.state.user ?\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Welcome {this.state.user.displayName}!</p>\n\t\t\t\t\t\t\t<p>When you are done, click the button below to log out.</p>\n\t\t\t\t\t\t\t<button onClick={this.logout}>Log Out</button>\n\t\t\t\t\t\t</div> \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Dropzone \n\t\t\t\t\t\t\t\taccept='.cpp,.java'\n\t\t\t\t\t\t\t\tonDropAccepted={this.onFileDrop}\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{({getRootProps, getInputProps}) => (\n\t\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t\t<div {...getRootProps()}>\n\t\t\t\t\t\t\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t\t\t\t\t\t\t<p><b>Drag and drop your program file here, or click this text to select a file</b></p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Dropzone>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t: <div>\n\t\t\t\t\t\t<p>Welcome to the 2019 ArborHacks coding competition!</p>\n\t\t\t\t\t\t<p>Please click the button below to log in with your Google account.</p>\n\t\t\t\t\t\t<button onClick={this.login}>Log In</button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n\n  // when component mounts, first thing it does is fetch all existing data in our db\n  // then we incorporate a polling logic so that we can easily see if our db has \n  // changed and implement those changes into our UI\n  componentDidMount() {\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 1000);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  // never let a process live forever \n  // always kill a process everytime we are done using it\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  // just a note, here, in the front end, we use the id key of our data object \n  // in order to identify which we want to Update or delete.\n  // for our back end, we use the object id assigned by MongoDB to modify \n  // data base entries\n\n  // our first get method that uses our backend api to \n  // fetch data from our data base\n  getDataFromDb = () => {\n    fetch(\"http://localhost:3001/api/getData\")\n      .then(data => data.json())\n      .then(res => this.setState({ data: res.data }));\n  };\n\n  // our put method that uses our backend api\n  // to create new query into our data base\n  putDataToDB = message => {\n    let currentIds = this.state.data.map(data => data.id);\n    let idToBeAdded = 0;\n    while (currentIds.includes(idToBeAdded)) {\n      ++idToBeAdded;\n    }\n\n    axios.post(\"http://localhost:3001/api/putData\", {\n      id: idToBeAdded,\n      message: message\n    });\n  };\n\n\n  // our delete method that uses our backend api \n  // to remove existing database information\n  deleteFromDB = idTodelete => {\n    let objIdToDelete = null;\n    this.state.data.forEach(dat => {\n      if (dat.id === idTodelete) {\n        objIdToDelete = dat._id;\n      }\n    });\n\n    axios.delete(\"http://localhost:3001/api/deleteData\", {\n      data: {\n        id: objIdToDelete\n      }\n    });\n  };\n\n\n  // our update method that uses our backend api\n  // to overwrite existing data base information\n  updateDB = (idToUpdate, updateToApply) => {\n    let objIdToUpdate = null;\n    this.state.data.forEach(dat => {\n      if (dat.id === idToUpdate) {\n        objIdToUpdate = dat._id;\n      }\n    });\n\n    axios.post(\"http://localhost:3001/api/updateData\", {\n      id: objIdToUpdate,\n      update: { message: updateToApply }\n    });\n  };\n\n\n  // here is our UI\n  // it is easy to understand their functions when you \n  // see them render into our screen\n  render() {\n\treturn (\n\t\t<div className='app'>\n\t\t\t<header>\n\t\t\t\t<div>\n\t\t\t\t\t<h1>And Then There Were NULL</h1>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t{this.state.user ?\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Welcome {this.state.user.displayName}!</p>\n\t\t\t\t\t\t<p>When you are done, click the button below to log out.</p>\n\t\t\t\t\t\t<button onClick={this.logout}>Log Out</button>\n\t\t\t\t\t</div> \n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Dropzone \n\t\t\t\t\t\t\taccept='.cpp,.java'\n\t\t\t\t\t\t\tonDropAccepted={this.onFileDrop}\n\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({getRootProps, getInputProps}) => (\n\t\t\t\t\t\t\t\t<section>\n\t\t\t\t\t\t\t\t\t<div {...getRootProps()}>\n\t\t\t\t\t\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t\t\t\t\t\t<p><b>Drag and drop your program file here, or click this text to select a file</b></p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Dropzone>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t: <div>\n\t\t\t\t\t<p>Welcome to the 2019 ArborHacks coding competition!</p>\n\t\t\t\t\t<p>Please click the button below to log in with your Google account.</p>\n\t\t\t\t\t<button onClick={this.login}>Log In</button>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}